//windows中的环境变量名"不去分大小写"
//一般可运行编译器工具放在"bin"目录下
//一般解释器安装:
	安装=>配置环境变量
//特殊
	rust安装:
		配置环境变量=>运行官方安装工具"rustup-init"
golang环境变量的配置:
	1)编译器:
		//GOROOT=>golang安装路径，eg->C:/GO
		//GOPATH=>go工程路径,需要自己创建,有多个用英文逗号","隔开
		//PATH=>%GOROOT%/bin=>GOROOT下的bin文件夹
	2)包管理:
		//(全局)下载到gopath中
			go get github.com/shopspring/decimal
		//全部安装(全局)下载到gopath中
			go mod download
		//下载到当前项目中vendor(当前项目)
			go mod vendor
		//go get/install失败=>配置代理,换源
			// 开启go mod模块管理类似于node的 npm
			go env -w GO111MODULE=on 
			// 这个模块代理,镜像依赖,类似node,依赖阿里云的镜像的 cnpm
			go env -w GOPROXY=https://goproxy.cn,direct
		//查看golang的环境配置
			go env
java环境变量的配置:
	编译器:
		//JAVA_HOME=>jdk的安装目录，eg->C:/jdk16
		//CLASSPATH=>指定类搜索路径,需要自己创建
		//PATH=>%JAVA_HOME%/bin=>JAVA_HOME下的bin目录
rust环境变量的配置:
	编译器:
		//RUSTUP_HOME=>官方安装工具"rustup-init"的默认安装路径
		//CARGO_HOME=>cargo工具链包路径,需要依赖RUSTUP_HOME,所以配置CARGO_HOME要先配置RUSTUP_HOME
		//PATH=>%CARGO_HOME%/bin=>CARGO_HOME下的bin文件夹
		//RUST_SRC_PATH=>rust源码/src路径
python环境变量的配置:
	1)编译器:
		//PYTHON_HOME=>python安装的路径
		//PATH=>%PYTHON_HOME%=>python解释器直接位于安装路径下
	2)包管理:
		//PATH=>%PYTHON_HOME%/Scripts=>PYTHON_HOME下的Scripts,是包管理工具的路径
		//包管理器换源
			# 清华源
			pip config set global.index-url https://pypi.tuna.tsinghua.edu.cn/simple
			
			# 或：
			# 阿里源
			pip config set global.index-url https://mirrors.aliyun.com/pypi/simple/
			# 腾讯源
			pip config set global.index-url http://mirrors.cloud.tencent.com/pypi/simple
			# 豆瓣源
			pip config set global.index-url http://pypi.douban.com/simple/
nodejs环境变量的配置:
	1)编译器:
		//NODEJS_HOME=>nodejs的安装路径
		//PATH=>%NODEJS_HOME%=>"nodejs编译器"和"包管理工具npm"直接位于安装路径下
	2)包管理:
		//NODE_GLOBAL=>npm安装的全局模块所在的路径,需要自己创建
		//NODE_CACHE=>npm安装的全局模块缓存的路径,需要自己创建
		//PATH=>%NODE_GLOBAL%=>安装模块的路径添加到PATH环境变量
		//修改npm的全局路径:
			npm config set prefix %NODE_GLOBAL%
			npm config set cache %NODE_CACHE%
		//npm安装全局模块,packageName:要安装的包名,-g:表示全局
			npm install <packageName> -g
		//使用srcAddr源进行安装
			npm install -g <packageName> --registry=<srcAddr>